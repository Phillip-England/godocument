(()=>{if(document.getElementsByTagName("html")[0].getAttribute("loaded")=="false"){function e(e,t){return e||console.error("Root is not defined in qs()"),e.querySelector(t)}function n(e,t){return e||console.error("Root is not defined in qsa()"),e.querySelectorAll(t)}function s(e,t,n){if(e){if(e==t)return;let o=n(e);if(o==!0)return;s(e.parentNode,t,n)}}function a(){return document.getElementsByTagName("html")[0].getAttribute("loaded")}function r(e){a()=="false"&&e()}function t(e,t,n){e.removeEventListener(t,n),e.addEventListener(t,n)}function c(e){for(let t=0;t<e.length;t++)if(e[t]=="`"){for(e=e.slice(0,t)+"<code>"+e.slice(t+1),t++;t<e.length&&e[t]!="`";)t++;e=e.slice(0,t)+"</code>"+e.slice(t+1)}return e}function o(e){e.parentElement.replaceWith(e);let t=e.innerHTML;return t=c(t),t}class d{getState(e,t){return e.getAttribute("zez:"+t).split(" ")}applyState(e,t){let n=this.getState(e,t);for(let t=0;t<n.length;t++)e.classList.add(n[t])}removeState(e,t){let s=this.getState(e,t),n=Array.from(e.classList);for(let e=0;e<s.length;e++){let t=n.indexOf(s[e]);t>-1&&n.splice(t,1)}e.classList=n.join(" ")}containsState(e,t){let n=this.getState(e,t),s=Array.from(e.classList);for(let e=0;e<n.length;e++)if(s.includes(n[e]))return!0;return!1}applyStateAll(e,t){for(let n=0;n<e.length;n++)this.applyState(e[n],t)}toggleState(e,t){let n=this.containsState(e,t);n?this.removeState(e,t):this.applyState(e,t)}swapStates(e,t,n){this.containsState(e,t)?this.enforceState(e,n,t):this.enforceState(e,t,n)}toggleStateAll(e,t){for(let n=0;n<e.length;n++)this.toggleState(e[n],t)}enforceState(e,t,n){this.applyState(e,t),this.removeState(e,n)}}let l=new d;class u{constructor(e,t,n){this.sitenav=e,this.sitenavItems=t,this.sitenavDropdowns=n,this.hook()}hook(){this.setActiveNavItem();for(let n=0;n<this.sitenavDropdowns.length;n++)t(e(this.sitenavDropdowns[n],"button"),"click",this.toggleDropdown.bind(this))}toggleDropdown(t){let n=null;s(t.target,this.sitenav,e=>{if(e.tagName=="LI")return n=e,!0});let o=e(n,"ul"),i=e(n,"div");l.toggleStateAll([i,o],"active")}setActiveNavItem(){for(let t=0;t<this.sitenavItems.length;t++){let n=this.sitenavItems[t],o=n.getAttribute("href");(o==window.location.pathname||o==window.location.href)&&(l.applyState(n,"active"),s(n,this.sitenav,t=>{if(t.classList.contains("dropdown")){let n=e(t,"ul"),s=e(t,"div"),o=e(t,"summary");l.applyStateAll([o,s,n],"active")}}))}}}class h{constructor(e,t,n){this.pagenav=e,this.pagenavLinks=t,this.articleTitles=n,this.windowTimeout=null,this.bufferZone=200,this.activeLink=null,this.hook()}hook(){this.setActivePageNavItem(),t(window,"scroll",this.handleWindowScroll.bind(this))}setActivePageNavItem(){if(this.pagenavLinks.length==0||this.articleTitles.length==0)return;for(let e=0;e<this.articleTitles.length;e++){let t=this.pagenavLinks[e],i=this.pagenavLinks[e+1],a=this.articleTitles[e],n=a.getBoundingClientRect().top,s=this.articleTitles[e+1],o=s?s.getBoundingClientRect().top:0;if(e==0&&n>0){this.activeLink=t;break}if(e==this.articleTitles.length-1&&n<0){this.activeLink=t;break}if(n<0&&o>0){if(o<this.bufferZone){this.activeLink=i;continue}this.activeLink=t}}for(let e=0;e<this.pagenavLinks.length;e++){let t=this.pagenavLinks[e];t==this.activeLink?l.applyState(t,"active"):l.removeState(t,"active")}}handleWindowScroll(){clearTimeout(this.windowTimeout),this.windowTimeout=setTimeout(()=>{this.setActivePageNavItem()},100)}}class m{constructor(e,t,n){this.headerBars=e,this.overlay=t,this.sitenav=n,this.hook()}hook(){t(this.headerBars,"click",this.toggleMobileNav.bind(this)),t(this.overlay,"click",this.toggleMobileNav.bind(this))}toggleMobileNav(){l.toggleState(this.overlay,"active"),l.toggleState(this.sitenav,"active")}}class f{constructor(e,t,n){this.sunIcons=e,this.moonIcons=t,this.htmlDocument=n,this.hook()}hook(){this.initTheme();for(let e=0;e<this.sunIcons.length;e++)t(this.sunIcons[e],"click",this.toggleTheme.bind(this));for(let e=0;e<this.moonIcons.length;e++)t(this.moonIcons[e],"click",this.toggleTheme.bind(this))}initTheme(){let e=localStorage.getItem("theme");if(e){if(e=="dark"){l.enforceState(this.htmlDocument,"dark","light");return}l.enforceState(this.htmlDocument,"light","dark");return}window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?l.enforceState(this.htmlDocument,"dark","light"):l.enforceState(this.htmlDocument,"light","dark")}toggleTheme(){if(l.swapStates(this.htmlDocument,"dark","light"),l.containsState(this.htmlDocument,"dark")){localStorage.setItem("theme","dark");return}localStorage.setItem("theme","light")}}class p extends HTMLElement{constructor(){super(),this.hook()}hook(){let e=o(this);this.innerHTML=`
                    <div class='bg-[var(--md-bg-color)] dark:bg-[var(--dark-md-bg-color)] p-4 rounded-md border-l-4 border-[var(--md-important-border-color)] dark:border-[var(--dark-md-important-border-color)] flex flex-col gap-2'>
                        <span class='flex flex-row item-center gap-2 dark:text-[var(--dark-md-important-text-color)] text-[var(--md-important-text-color)]'>
                            <span class='flex items-center dark:text-[var(--dark-md-important-text-color)] text-[var(--md-important-text-color)]'>
                                <svg class="h-6 w-6" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 13V8m0 8h.01M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
                                </svg>
                            </span>
                            <p class='font-bold'>Important</p>                   
                        </span>
                        <p class='custom-inline-code'>${e}</p>
                    </div>
                `}}class g extends HTMLElement{constructor(){super(),this.hook()}hook(){let e=o(this);this.innerHTML=`
                    <div class='bg-[var(--md-bg-color)] dark:bg-[var(--dark-md-bg-color)] p-4 rounded-md border-l-4 border-[var(--md-warning-border-color)] dark:border-[var(--dark-md-warning-border-color)] flex flex-col gap-2'>
                        <span class='flex flex-row item-center gap-2 dark:text-[var(--dark-md-warning-text-color)] text-[var(--md-warning-text-color)]'>
                            <span class='flex items-center dark:text-[var(--dark-md-warning-text-color)] text-[var(--md-warning-text-color)]'>
                            <svg class="w-6 h-6" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                <path fill="currentColor" d="M12 17a2 2 0 0 1 2 2h-4a2 2 0 0 1 2-2Z"/>
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.815 9H16.5a2 2 0 1 0-1.03-3.707A1.87 1.87 0 0 0 15.5 5 1.992 1.992 0 0 0 12 3.69 1.992 1.992 0 0 0 8.5 5c.002.098.012.196.03.293A2 2 0 1 0 7.5 9h3.388m2.927-.985v3.604M10.228 9v2.574M15 16h.01M9 16h.01m11.962-4.426a1.805 1.805 0 0 1-1.74 1.326 1.893 1.893 0 0 1-1.811-1.326 1.9 1.9 0 0 1-3.621 0 1.8 1.8 0 0 1-1.749 1.326 1.98 1.98 0 0 1-1.87-1.326A1.763 1.763 0 0 1 8.46 12.9a2.035 2.035 0 0 1-1.905-1.326A1.9 1.9 0 0 1 4.74 12.9 1.805 1.805 0 0 1 3 11.574V12a9 9 0 0 0 18 0l-.028-.426Z"/>
                            </svg>
                          
                            </span>
                            <p class='font-bold'>Warning</p>                   
                        </span>
                        <p class='custom-inline-code'>${e}</p>
                    </div>
                `}}class v extends HTMLElement{constructor(){super(),this.hook()}hook(){let e=o(this);this.innerHTML=`
                    <div class='bg-[var(--md-bg-color)] dark:bg-[var(--dark-md-bg-color)] p-4 rounded-md border-l-4 border-[var(--md-correct-border-color)] dark:border-[var(--dark-md-correct-border-color)] flex flex-col gap-2'>
                        <span class='flex flex-row item-center gap-2 dark:text-[var(--dark-md-correct-text-color)] text-[var(--md-correct-text-color)]'>
                            <span class='flex items-center dark:text-[var(--dark-md-correct-text-color)] text-[var(--md-correct-text-color)]'>
                            <svg class="w-6 h-6" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.5 11.5 11 14l4-4m6 2a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
                            </svg>
                        </span>
                            <p class='font-bold'>Correct</p>                   
                        </span>
                        <p class='custom-inline-code'>${e}</p>
                    </div>
                `}}function i(){const d=e(document,"body"),t=e(document,"#sitenav"),_=n(t,".item"),j=n(t,".dropdown"),s=e(document,"#pagenav"),c=n(s,"a"),a=e(document,"#article"),b=n(a,"h2, h3, h4, h5, h6"),i=e(document,"#header"),y=e(i,"#bars"),o=e(document,"#overlay"),w=n(document,".sun"),O=n(document,".moon"),x=e(document,"html");window.scrollTo(0,0,{behavior:"auto"}),new u(t,_,j,i,o),new h(s,c,b),new m(y,o,t),new f(w,O,x),r(()=>{customElements.define("md-important",p),customElements.define("md-warning",g),customElements.define("md-correct",v)}),Prism.highlightAll(),l.applyState(d,"loaded"),document.getElementsByTagName("html")[0].setAttribute("loaded","true")}t(window,"DOMContentLoaded",i),t(document.getElementsByTagName("body")[0],"htmx:afterOnLoad",i)}})()